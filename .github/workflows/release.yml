name: Release and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    # Skip if this is a release commit (to prevent loops)
    if: contains(github.event.head_commit.message, 'Release v') == false && contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grant write permission to allow creating releases
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: ${{ github.event.repository.default_branch }} # Explicitly checkout the default branch

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Compile TypeScript
        run: npx tsc

      - name: Run npm audit fix
        run: npm audit fix

      - name: Run tests
        run: npm test
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BOTSPAM_CHANNEL_ID: ${{ secrets.BOTSPAM_CHANNEL_ID }}
          PROFILE_CHANNEL_ID: ${{ secrets.PROFILE_CHANNEL_ID }}
          WELCOME_CHANNEL_ID: ${{ secrets.WELCOME_CHANNEL_ID }}
          WELCOME_PROMPT: ${{ secrets.WELCOME_PROMPT }}

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(grep -oP '"version":\s*"\K[0-9]+\.[0-9]+\.[0-9]+' package.json)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Using version: $VERSION from package.json"

      - name: Create Release Notes
        id: release_notes
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)

          # Generate release notes from commit message
          RELEASE_NOTES="## Changes in v${VERSION}

          **Commit:** ${COMMIT_MESSAGE}

          This release includes Docker image build and deployment."

          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: ${{ steps.release_notes.outputs.release_notes }}
          draft: false
          prerelease: false

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            heavygee/hello-dalle-discordbot:latest
            heavygee/hello-dalle-discordbot:v${{ steps.get_version.outputs.version }} 